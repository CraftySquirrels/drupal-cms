#!/usr/bin/env bash

## Description: Import the live database and prepare this replica.
## Usage: sync
## Example: ddev sync

set -e

usage() {
  echo NewNew Sync Command "|" ./ddev/commands/host/sync
  echo "--skip-update   Don't run drush updates."
}
say() {
  echo "sync | ${*}"
}
line() {
  CHARACTER="${CHARACTER:--}"
  COLUMNS="${COLUMNS:-$(tput cols -T xterm)}"
  printf '%*s\n' "${COLUMNS}" '' | tr ' ' "${CHARACTER}"
}

# Command line Options
RUN_UPDATE=true
while [ $# -gt 0 ]; do
    case "$1" in
        --help)
          usage
          exit
          ;;

        --skip-update)
            RUN_UPDATE=""
            ;;

    esac
    shift $(( $# > 0 ? 1 : 0 ))
done

export PATH="vendor/bin:bin:$PATH"

say "Sync the newnew."

say "Hostname: $(hostname -f)"
say "Whoami: $(whoami)"
say "PWD: $(pwd)"

ddev drush status
say ""
say "About to destroy the site listed above."
say "Hit CTRL-C within the next 3 seconds to abort..."
sleep 3

say "drush sql:drop"
ddev drush sql:drop --yes

# If database snapshot exists:
BACKUP_FILE=${BACKUP_FILE:-"~/Backups/newnew.page/live/snapshot.sql.gz"}
ddev import-db --file $BACKUP_FILE

# @TODO:
#  Use ENV vars and .env file for configuring paths.
#  If on live server, create new backup.
#  If on local, download new backup.

if [[ -n $RUN_UPDATE ]]; then
  say
  say "ddev drush deploy."
  ddev drush deploy
else
  say "Skipping updates."
fi

say
say "ddev drush en stage_file_proxy devel"
ddev drush en stage_file_proxy devel --yes

say
say "drush status"
ddev drush status

say
say "Sync complete! Run 'ddev launch' to open the site in a browser, or 'ddev drush uli' to get a login link."
